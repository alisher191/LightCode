import requests
import datetime
from aiogram import Bot
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

open_weather_token = "dc09ede661b9bf605e28c882ea1fc240"
bot_token = "6291187696:AAEqGl5vsU90W-mcHctAltTxwozhwRTK5xs"

bot = Bot(token=bot_token)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def start(message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")


@dp.message_handler()
async def get_weather(message):
    try:
        r = requests.get(f"https://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={open_weather_token}&units=metric&lang=ru")
        data = r.json()
        # pp(data)
        city = data["name"]
        des = data["weather"][0]["description"]
        cur_weath = data["main"]["temp"]
        press = data["main"]["pressure"]
        humidity = data["main"]["humidity"]
        wind = data["wind"]["speed"]
        country = data["sys"]["country"]
        sunrise = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
        await message.reply(f"‚ö°Ô∏è‚òÑÔ∏èüí•üî•üå™ {datetime.datetime.now().strftime('%d.%m.%Y %H:%M')} üå™üî•üí•‚òÑÔ∏è‚ö°\nÔ∏è"
                            f"–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞: {city}\n"
              f"–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞: {des}\n"
              f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {cur_weath}¬∞C\n"
              f"–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ: {press} –º–º.—Ä—Ç.—Å—Ç.\n"
              f"–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞: {humidity}%\n"
              f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind} –º/—Å\n"
              f"–ö–æ–¥ —Å—Ç—Ä–∞–Ω—ã: {country}\n"
              f"–í–æ—Å—Ö–æ–¥: {sunrise}")

    except Exception as ex:
        await message.reply("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!")


if __name__ == '__main__':
    executor.start_polling(dp)