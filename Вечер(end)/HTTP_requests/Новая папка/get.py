import requests

##############################################

"""
Как сделать запрос GET
Это один из наиболее распространенных методов HTTP-запросов, 
с которыми вы столкнетесь. Это операция только для чтения, 
позволяющая получать данные из API.

Давайте попробуем использовать запрос GET на первой конечной 
точке из упомянутых выше. 
Она должна вернуть список продуктов.
"""
# BASE_URL = 'https://fakestoreapi.com'

# response = requests.get(f"{BASE_URL}/products")
# with open('resp.txt', 'w') as file:
#     file.write(str(response.json()))
# print(response.json())
# print(response.status_code)
"""
В приведенном выше сценарии используется метод requests.get() 
для отправки запроса GET в конечную точку API /products. 
Данный запрос возвращает нам список всех продуктов. 
Затем мы вызываем метод .json(), чтобы просмотреть 
полученный ответ JSON.
"""

##############################################

"""
Поскольку конечная точка /products возвращает много данных, 
давайте ограничим эти данные только тремя продуктами.

Для этого у нас есть конечная точка /products?limit=x, 
где x – это положительное целое число. 
limit (лимит, ограничение) — параметр запроса. 
Давайте посмотрим, как мы можем добавить этот параметр в наш запрос:
"""
# BASE_URL = 'https://fakestoreapi.com'
# query_params = {
#     "limit": 3
# }
# response = requests.get(f"{BASE_URL}/products", params=query_params)
# print(response.json())
"""
Метод requests.get() принимает параметр с именем params, 
в котором мы можем указать параметры нашего запроса в формате словаря Python. 
Таким образом, мы создаем словарь с именем query_params и 
передаем limit в качестве ключа и 3 в качестве значения. 
Затем мы передаем этот словарь query_params в request.get().
"""
##############################################

"""
Таким образом, у нас есть данные об ответах, 
ограниченные всего тремя продуктами. Попробуем получить только один товар, 
id которого равен 18.
"""
# BASE_URL = 'https://fakestoreapi.com'
# response = requests.get(f"{BASE_URL}/products/18")
# print(response)
"""
Поскольку у нас есть конечная точка /products/<product_id>, 
мы можем передать идентификатор 18 в URL-адресе API и сделать для него запрос GET.
"""

##############################################

